Wed Dec 4 16:31:29 EST 2024: Job 14060666 is allocated resources.
Inside slurm_launcher.slrm (/var/spool/slurmd/job14060666/slurm_script). received arguments: main.py --num_epochs 1000 --log_interval 100 --loss_fn MSE --dataset mnist
/h/aguzmanc/miniforge3/envs/xvfm/lib/python3.10/site-packages/ignite/handlers/checkpoint.py:16: DeprecationWarning: `TorchScript` support for functional optimizers is deprecated and will be removed in a future PyTorch release. Consider using the `torch.compile` optimizer instead.
  from torch.distributed.optim import ZeroRedundancyOptimizer
wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: andresguzco. Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.18.7
wandb: Run data is saved locally in /fs01/home/aguzmanc/XVFM/wandb/run-20241204_163138-s4blu0z9
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run hardy-resonance-42
wandb: ‚≠êÔ∏è View project at https://wandb.ai/andresguzco/XVFM
wandb: üöÄ View run at https://wandb.ai/andresguzco/XVFM/runs/s4blu0z9
Number of parameters: 1075361
Training parameters: {'num_epochs': 1000, 'batch_size': 256, 'lr': 0.001, 'loss_fn': 'MSE', 'learn_sigma': False, 'learned_structure': 'scalar', 'int_method': 'euler', 'integration_steps': 100, 'sigma': 0.1, 'save_model': False, 'dataset': 'mnist', 'log_interval': 100, 'seed': 42, 'checkpoint_interval': 100, 'checkpoint_dir': 'checkpoints', 'results_dir': 'results'}
  0%|          | 0/1000 [00:00<?, ?it/s]/fs01/home/aguzmanc/XVFM/data/utils.py:48: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  evaluator.load_state_dict(torch.load("checkpoints/fid_model.pt"))
  0%|          | 1/1000 [01:11<19:55:23, 71.79s/it]